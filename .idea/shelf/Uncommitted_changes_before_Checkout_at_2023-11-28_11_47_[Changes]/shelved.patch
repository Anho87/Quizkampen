Index: src/GuiClass.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import javax.swing.*;\r\nimport java.awt.*;\r\nimport java.awt.event.ActionEvent;\r\nimport java.awt.event.ActionListener;\r\nimport java.util.ArrayList;\r\n\r\npublic class GuiClass extends JFrame {\r\n\r\n     String userName;\r\n     String opponentUserName;\r\n\r\n     JFrame startFrame = new JFrame(\"Quizkampen - \" + userName);\r\n     JPanel startPanel = new JPanel(new BorderLayout());\r\n     JPanel startButtonPanel = new JPanel(new GridLayout(1, 1));\r\n     JButton newGameButton = new JButton(\"Starta nytt spel\");\r\n\r\n\r\n     JFrame gameMenuFrame = new JFrame(\"Spelmeny - \" + userName);\r\n     JPanel gameMenuPanel = new JPanel(new BorderLayout());\r\n     JPanel gameMenuButtonPanel = new JPanel(new GridLayout(1, 2));\r\n     JButton randomPlayerButton = new JButton(\"Slumpa spelare\");\r\n     JButton playAgainstAFriendButton = new JButton(\"Spela mot en vän\");\r\n\r\n\r\n     JFrame categoriesFrame = new JFrame(\"Kategorier - \" + userName);\r\n     JPanel categoriesPanel = new JPanel(new BorderLayout());\r\n     JPanel categoriesButtonPanel = new JPanel(new GridLayout(3, 1));\r\n     JLabel categoriesLabel = new JLabel(\"Kategorier\", SwingConstants.CENTER);\r\n     JButton categoryButton1 = new JButton(\"Kategori 1\");\r\n     JButton categoryButton2 = new JButton(\"Kategori 2\");\r\n     JButton categoryButton3 = new JButton(\"Kategori 3\");\r\n\r\n\r\n    JFrame quizFrame = new JFrame(\"Quiz - \" + userName);\r\n    JPanel quizPanel = new JPanel();\r\n    JPanel questionAndResultPanel = new JPanel();\r\n    private int questionNr;\r\n    private JLabel questionNumber = new JLabel(\"Fråga \" + questionNr);\r\n    private JLabel question = new JLabel(\"Fråga\");\r\n    private JLabel result = new JLabel();\r\n    private JPanel answerPanel = new JPanel();\r\n    JButton answer1 = new JButton(\"Svar 1\");\r\n    JButton answer2 = new JButton(\"Svar 2\");\r\n    JButton answer3 = new JButton(\"Svar 3\");\r\n    JButton answer4 = new JButton(\"Svar 4\");\r\n    private ArrayList<JButton> answerButtons = new ArrayList<>();\r\n\r\n    JFrame waitingForPlayerFrame = new JFrame(userName);\r\n    JPanel waitingForPlayerPanel = new JPanel(new BorderLayout());\r\n    JPanel waitingForPlayer1Panel = new JPanel(new BorderLayout());\r\n    JPanel waitingForPlayer2Panel = new JPanel(new BorderLayout());\r\n    JPanel waitingForPlayerResultPanel = new JPanel(new BorderLayout());\r\n    JTextArea waitingForPlayerResultTextArea = new JTextArea();\r\n    JTextArea waitingForPlayer1TextArea = new JTextArea();\r\n    JTextArea waitingForPlayer2TextArea = new JTextArea();\r\n    JButton waitingForPlayerButton = new JButton(\"Din Tur\");\r\n    JMenuBar menuBar = new JMenuBar();\r\n    JMenu chatMenu = new JMenu(\"Chat\");\r\n    JMenu changeColorMenu = new JMenu(\"Change color\");\r\n    JMenu quitMenu = new JMenu(\"Quit\");\r\n    JFrame chatFrame = new JFrame(\"Chat - \" + userName);\r\n    JPanel chatPanel = new JPanel(new BorderLayout());\r\n    JPanel inputPanel = new JPanel(new BorderLayout());\r\n    JPanel buttonPanel = new JPanel(new FlowLayout(FlowLayout.RIGHT));\r\n    JTextArea chatTextArea = new JTextArea();\r\n    JTextField chatInputField = new JTextField();\r\n    JButton sendChatButton = new JButton(\"Send\");\r\n\r\nint playerScore = 0;\r\nint opponentScore = 0;\r\n\r\n\r\n\r\n    public String setUserName() {\r\n        userName = JOptionPane.showInputDialog(null, \"Ange ditt användarnamn: \");\r\n        if (userName == null || userName.trim().isEmpty()) {\r\n            userName = \"Okänd Användare\";\r\n        }\r\n        updateFrameTitles();\r\n        return userName;\r\n    }\r\n    private void updateFrameTitles() {\r\n        startFrame.setTitle(\"Quizkampen - \" + userName);\r\n        gameMenuFrame.setTitle(\"Spelmeny - \" + userName);\r\n        categoriesFrame.setTitle(\"Kategorier - \" + userName);\r\n    }\r\n\r\n    public void getStartWindow(){\r\n        startFrame.add(startPanel);\r\n        startPanel.add(startButtonPanel, BorderLayout.SOUTH);\r\n        startButtonPanel.add(newGameButton);\r\n        newGameButton.addActionListener(e -> getGameMenu());\r\n\r\n        startFrame.setSize(300, 500);\r\n        startFrame.setLocationRelativeTo(null);\r\n        startFrame.setResizable(false);\r\n        startFrame.setVisible(true);\r\n        startFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n    }\r\n\r\n    public void getGameMenu() {\r\n        gameMenuFrame.add(gameMenuPanel);\r\n        gameMenuPanel.add(gameMenuButtonPanel, BorderLayout.SOUTH);\r\n        gameMenuButtonPanel.add(randomPlayerButton);\r\n        gameMenuButtonPanel.add(playAgainstAFriendButton);\r\n        //playAgainstAFriendButton.addActionListener(e -> getCategories());\r\n\r\n        gameMenuFrame.setSize(300, 500);\r\n        gameMenuFrame.setLocationRelativeTo(null);\r\n        gameMenuFrame.setResizable(false);\r\n        gameMenuFrame.setVisible(true);\r\n        gameMenuFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n    }\r\n\r\n    public void getCategories(String cat1, String cat2, String cat3){ \r\n        remove();\r\n        add(categoriesPanel);\r\n        categoriesPanel.add(categoriesLabel, BorderLayout.NORTH);\r\n        categoriesPanel.add(categoriesButtonPanel, BorderLayout.SOUTH);\r\n\r\n        categoriesButtonPanel.setLayout(new BoxLayout(categoriesButtonPanel, BoxLayout.Y_AXIS));\r\n\r\n        categoryButton1.setText(cat1);\r\n        categoryButton2.setText(cat2);\r\n        categoryButton3.setText(cat3);\r\n        categoriesButtonPanel.add(categoryButton1);\r\n        categoryButton1.setAlignmentX(Component.CENTER_ALIGNMENT);\r\n        categoriesButtonPanel.add(categoryButton2);\r\n        categoryButton2.setAlignmentX(Component.CENTER_ALIGNMENT);\r\n        categoriesButtonPanel.add(categoryButton3);\r\n        categoryButton3.setAlignmentX(Component.CENTER_ALIGNMENT);\r\n\r\n        /*AtomicReference<String> result = new AtomicReference<>(\"\");\r\n\r\n        categoryButton1.addActionListener(e -> result.set(cat1));\r\n        categoryButton2.addActionListener(e -> result.set(cat2));\r\n        categoryButton3.addActionListener(e -> result.set(cat3));*/\r\n\r\n        categoriesFrame.setSize(300, 500);\r\n        categoriesFrame.setLocationRelativeTo(null);\r\n        categoriesFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n        categoriesFrame.setResizable(false);\r\n        //categoriesFrame.setVisible(true);\r\n        System.out.println(\"here should categoryFrame display itself\");\r\n        revalidate();\r\n        repaint();\r\n        \r\n    }\r\n    public void remove(){\r\n        getContentPane().removeAll();\r\n        revalidate();\r\n        repaint();\r\n    }\r\n\r\n    public void getQuizWindow(String questionText, String correctAnswer, String [] inCorrectAnswers){\r\n        question.setText(questionText);\r\n        \r\n        remove();\r\n        add(quizPanel);\r\n        quizPanel.setLayout(new BorderLayout());\r\n        quizPanel.add(questionNumber, BorderLayout.NORTH);\r\n        quizPanel.add(questionAndResultPanel, BorderLayout.CENTER);\r\n\r\n        questionAndResultPanel.setLayout(new BorderLayout());\r\n        questionAndResultPanel.add(question, BorderLayout.NORTH);\r\n        questionAndResultPanel.add(result, BorderLayout.CENTER);\r\n\r\n        question.setBorder(BorderFactory.createEmptyBorder(50, 0, 0, 0));\r\n        question.setHorizontalAlignment(JLabel.CENTER);\r\n        result.setHorizontalAlignment(JLabel.CENTER);\r\n        result.setText(\"\");\r\n\r\n        quizPanel.add(answerPanel, BorderLayout.SOUTH);\r\n\r\n        answerPanel.setLayout(new GridLayout(2, 2, 10, 10));\r\n        answerButtons.add(answer1);answerButtons.add(answer2);answerButtons.add(answer3);answerButtons.add(answer4);\r\n        int randomInt1 = (int) (Math.random() * 4);\r\n        int j = 0;\r\n        for (int i = 0; i < 4; i++) {\r\n            if (i == randomInt1) {\r\n                answerButtons.get(i).setText(correctAnswer);\r\n            }\r\n            else {\r\n                answerButtons.get(i).setText(inCorrectAnswers[j]);\r\n                j++;\r\n            }\r\n        }\r\n        for (JButton button : answerButtons) {\r\n            answerPanel.add(button);\r\n        }\r\n\r\n        JMenuBar menuBar = createMenuBar();\r\n        quizFrame.setJMenuBar(menuBar);\r\n\r\n        quizFrame.setSize(300, 500);\r\n        quizFrame.setLocationRelativeTo(null);\r\n\r\n\r\n        //quizFrame.setVisible(true);\r\n        quizFrame.setResizable(false);\r\n        quizFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n        revalidate();\r\n        repaint();\r\n    }\r\n    public void setOpponentUserName (String opponentUserName) {\r\n        this.opponentUserName = opponentUserName;\r\n    }\r\n\r\n    private void getChat() {\r\n        chatTextArea.setEditable(false);\r\n\r\n        JScrollPane chatScrollPane = new JScrollPane(chatTextArea);\r\n        chatScrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);\r\n\r\n        buttonPanel.add(sendChatButton);\r\n\r\n        inputPanel.add(chatInputField, BorderLayout.CENTER);\r\n        inputPanel.add(buttonPanel, BorderLayout.EAST);\r\n\r\n        chatPanel.setLayout(new BorderLayout());\r\n        chatPanel.add(chatScrollPane, BorderLayout.CENTER);\r\n        chatPanel.add(inputPanel, BorderLayout.SOUTH);\r\n\r\n        sendChatButton.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                //sendMessage();\r\n            }\r\n        });\r\n\r\n        sendChatButton.setPreferredSize(new Dimension(80, 35));\r\n\r\n        chatFrame.add(chatPanel);\r\n        chatFrame.setSize(250, 250);\r\n        chatFrame.setLocationRelativeTo(null);\r\n        chatFrame.setResizable(false);\r\n        chatFrame.setVisible(true);\r\n    }\r\n    private JMenuBar createMenuBar() {\r\n        JMenuBar menuBar = new JMenuBar();\r\n\r\n        JMenu chatMenu = new JMenu(\"Chat\");\r\n        JMenu changeColorMenu = new JMenu(\"Change color\");\r\n        JMenu quitMenu = new JMenu(\"Quit\");\r\n\r\n\r\n        JMenuItem changeBodyColorItem = new JMenuItem(\"Change body color\");\r\n        JMenuItem changeTextColorItem = new JMenuItem(\"Change text color\");\r\n\r\n        changeColorMenu.add(changeBodyColorItem);\r\n        changeColorMenu.add(changeTextColorItem);\r\n\r\n        JMenuItem closeChatItem = new JMenuItem(\"Close\");\r\n        JMenuItem openChatItem = new JMenuItem(\"Open\");\r\n\r\n        chatMenu.add(closeChatItem);\r\n        chatMenu.add(openChatItem);\r\n\r\n        JMenuItem exitGameItem = new JMenuItem(\"Exit Game\");\r\n\r\n        quitMenu.add(exitGameItem);\r\n\r\n        openChatItem.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                getChat();\r\n            }\r\n        });\r\n\r\n        closeChatItem.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                chatFrame.dispose();\r\n            }\r\n        });\r\n\r\n        changeBodyColorItem.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                JColorChooser colorChooser = new JColorChooser();\r\n                Color color = JColorChooser.showDialog(null, \"Choose a color\", Color.black);\r\n\r\n                questionAndResultPanel.setBackground(color);\r\n                //answerPanel.setBackground(color);\r\n                quizPanel.setBackground(color);\r\n\r\n\r\n            }\r\n        });\r\n\r\n        changeTextColorItem.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                JColorChooser colorChooser = new JColorChooser();\r\n                Color color = JColorChooser.showDialog(null, \"Choose a color\", Color.black);\r\n                question.setForeground(color);\r\n                answer1.setForeground(color);\r\n                answer2.setForeground(color);\r\n                answer3.setForeground(color);\r\n                answer4.setForeground(color);\r\n                questionNumber.setForeground(color);\r\n                questionAndResultPanel.setForeground(color);\r\n                result.setForeground(color);\r\n\r\n\r\n            }\r\n        });\r\n\r\n        exitGameItem.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                getStartWindow();\r\n                quizFrame.dispose();\r\n            }\r\n        });\r\n\r\n        menuBar.add(chatMenu);\r\n        menuBar.add(changeColorMenu);\r\n        menuBar.add(quitMenu);\r\n\r\n        return menuBar;\r\n    }\r\n    public void waitingForPlayer() {\r\n        remove();\r\n        //waitingForPlayerFrame.setTitle(userName);\r\n        waitingForPlayerPanel.add(waitingForPlayer1Panel, BorderLayout.WEST);\r\n        waitingForPlayerPanel.add(waitingForPlayer2Panel, BorderLayout.EAST);\r\n        waitingForPlayerPanel.add(waitingForPlayerResultPanel, BorderLayout.SOUTH);\r\n        \r\n        waitingForPlayer1Panel.add(waitingForPlayer1TextArea);\r\n        waitingForPlayer1Panel.setPreferredSize(new Dimension(150, 400));\r\n        waitingForPlayer1TextArea.setText( userName + \"\\nAntal korrekta svar: \" + playerScore);\r\n\r\n        //add(waitingForPlayer2Panel, BorderLayout.EAST);\r\n        waitingForPlayer2Panel.add(waitingForPlayer2TextArea);\r\n        waitingForPlayer2Panel.setPreferredSize(new Dimension(150, 400));\r\n        waitingForPlayer2TextArea.setText(opponentUserName +\"\\nAntal korrekta svar: \" + opponentScore );\r\n\r\n        //add(waitingForPlayerResultPanel, BorderLayout.SOUTH);\r\n        waitingForPlayerResultPanel.setPreferredSize(new Dimension(300, 50));\r\n        waitingForPlayerResultPanel.setLayout(new GridLayout(1,2));\r\n\r\n        waitingForPlayerResultPanel.add(waitingForPlayerResultTextArea);\r\n        waitingForPlayerResultTextArea.setText(opponentUserName + \" is Answering\\nQuestions\");\r\n\r\n        waitingForPlayerResultPanel.add(waitingForPlayerButton);\r\n        waitingForPlayerButton.setSize(50,30);\r\n        waitingForPlayerButton.setEnabled(false);\r\n\r\n        add(waitingForPlayerPanel);\r\n\r\n        waitingForPlayer1TextArea.setEditable(false);\r\n        waitingForPlayer2TextArea.setEditable(false);\r\n        waitingForPlayerResultTextArea.setEditable(false);\r\n\r\n        JMenuBar menuBar = createMenuBar();\r\n        waitingForPlayerFrame.setJMenuBar(menuBar);\r\n\r\n        //updateGUI();\r\n       /* waitingForPlayerFrame.setSize(300, 500);\r\n        waitingForPlayerFrame.setLocationRelativeTo(null);\r\n        waitingForPlayerFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n        waitingForPlayerFrame.setResizable(false);\r\n        waitingForPlayerFrame.setVisible(true);*/\r\n        revalidate();\r\n        repaint();\r\n\r\n\r\n    }\r\n\r\n    public void setup()  {\r\n        setTitle(\"Quizkampen \" + userName);\r\n        setSize(300, 500);\r\n        setLocationRelativeTo(null);\r\n        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n        setResizable(false);\r\n        setVisible(true);\r\n        revalidate();\r\n        repaint();\r\n    }\r\n   public GuiClass(){\r\n        setup();\r\n   }\r\n\r\n    public void updateGUI() {\r\n        waitingForPlayer1TextArea.setText(userName + \"\\nAntal korrekta svar: \" + Server.getPlayer1Points());\r\n        waitingForPlayer2TextArea.setText(opponentUserName + \"\\nAntal korrekta svar: \" + Server.getPlayer2Points());\r\n        waitingForPlayerResultTextArea.setText(opponentUserName + \" is Answering\\nQuestions\");\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/GuiClass.java b/src/GuiClass.java
--- a/src/GuiClass.java	
+++ b/src/GuiClass.java	
@@ -65,6 +65,10 @@
     JTextArea chatTextArea = new JTextArea();
     JTextField chatInputField = new JTextField();
     JButton sendChatButton = new JButton("Send");
+    Dimension standardSize = new Dimension(500, 600);
+    Font headerFont = new Font("Arial", Font.BOLD, 25);
+    Font smallTextFont = new Font("Arial", Font.PLAIN, 18);
+    Font answerButtonsFont = new Font("Arial", Font.PLAIN, 16);
 
 int playerScore = 0;
 int opponentScore = 0;
